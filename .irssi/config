servers = (
  {
    address = "irc.recycled-irc.net";
    chatnet = "recycled";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "no";
  },
  {
    address = "irc.otaku-irc.fr";
    chatnet = "otaku";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "no";
  },
  {
    address = "irc.worldnet.net";
    chatnet = "worldnet";
    port = "7000";
    use_ssl = "yes";
    ssl_verify = "no";
    autoconnect = "no";
  },
  {
    address = "irc.fansub-irc.eu";
    chatnet = "fansub";
    port = "6600";
    use_ssl = "yes";
    ssl_verify = "no";
    autoconnect = "no";
  },
  {
    address = "irc.oftc.net";
    chatnet = "oftc";
    port = "9999";
    use_ssl = "yes";
    ssl_verify = "yes";
    ssl_cafile = "/home/user/.irssi/certs/spi-cacert.crt";
    ssl_cacert = "";
    ssl_cert = "";
    ssl_pkey = "";
    autoconnect = "no";
  }
);

chatnets = {
  otaku = {
    type = "IRC";
    nick = "nick";
    user_name = "username";
    real_name = "realname";
    max_query_chans = "5";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
  };
  worldnet = {
    type = "IRC";
    nick = "nick";
    user_name = "username";
    real_name = "realname";
    autosendcmd = "/msg NickServ identify p3ssw0rd";
    max_query_chans = "5";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
  };
  fansub = {
    type = "IRC";
    nick = "nick";
    user_name = "username";
    real_name = "realname";
    max_query_chans = "5";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
  };
  oftc = {
    type = "IRC";
    nick = "nick";
    user_name = "username";
    real_name = "realname";
    autosendcmd = "/nicklist screen";
    max_query_chans = "5";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
  };
  SILC = { type = "SILC"; };
  recycled = { type = "IRC"; };
};

channels = (
  { name = "#linux"; chatnet = "fansub"; autojoin = "Yes"; },
  { name = "#scripting"; chatnet = "fansub"; autojoin = "Yes"; },
  { name = "#D-F-TEAM"; chatnet = "fansub"; autojoin = "Yes"; },
  { name = "#Infinity-fansub"; chatnet = "fansub"; autojoin = "Yes"; },
  { name = "#requiem"; chatnet = "fansub"; autojoin = "Yes"; },
  { name = "#Seven-team"; chatnet = "fansub"; autojoin = "Yes"; },
  { name = "#soai-no-naka"; chatnet = "fansub"; autojoin = "Yes"; },
  { name = "#erogaki-team"; chatnet = "fansub"; autojoin = "Yes"; },

  { name = "#debian-fr"; chatnet = "oftc"; autojoin = "Yes"; },
  { name = "#debian"; chatnet = "oftc"; autojoin = "Yes"; },
  { name = "#gentoo"; chatnet = "oftc"; autojoin = "Yes"; },
  { name = "#OpenBSD"; chatnet = "oftc"; autojoin = "Yes"; },
  { name = "#perl"; chatnet = "oftc"; autojoin = "Yes"; },

  { name = "#Mangas-FR"; chatnet = "otaku"; autojoin = "Yes"; },
  { name = "#millenium-team"; chatnet = "otaku"; autojoin = "Yes"; },

  { name = "silc"; chatnet = "silc"; autojoin = "No"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "/window $0";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  AMSG = "/foreach channel";
  AME = "/foreach channel /me $-;/foreach query /me $T $-";
  ASAY = "/foreach channel /eval msg $$C $$-;/foreach query /eval msg $$T $$-";
  CON = "/me <-- Mais qu'il est con !";
  #TELNET = "window new hidden;window name telnet;exec -name telnet -nosh -interactive -window telnet $-";
  #SSH = "window new hidden;window name ssh;exec -name ssh -nosh -interactive -window ssh $-";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " %GClient v$J - Running on $sysname $sysarch %n";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        usercount = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "active";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "realname";
    user_name = "username";
    nick = "nick";
    quit_message = "Program received signal SIGSEGV, : Segmentation fault.";
    timestamp_format = "%H:%M:%S";
  };
  ignores = ( { level = "CTCPS"; } );
  #ctcp_version_reply = "irssi v$J - running on $sysname $sysarch";
  ctcp_version_reply = "xchat";
  #ctcp_userinfo_reply = $Y;
  ctcp_userinfo_reply = "4nnH";
  usermode = "+i";
  auto_whowhas = "ON";
  "fe-text" = { actlist_sort = "refnum"; };
  "perl/core/scripts" = {
    invitejoin = "yes";
    binary_spaces = "no";
    show_binary_too = "yes";
    url_color = "off";
    browse_command = "firefox %u &";
    usercount_show_halfops = "yes";
    usercount_show_ircops = "yes";
    usercount_show_zero = "no";
    beep_cmd = "play -q /usr/share/sounds/zelda/stereo/imsent.ogg";
    nicklist_automode = "SCREEN";
    nicklist_width = "14";
    openurl_app_http = "screen lynx \"$1\"";
    openurl_watch_mail = "no";
  };
  "irc/core" = {
    part_message = "Program received signal SIGSEGV, : Segmentation fault.";
  };
  "fe-common/core" = {
    theme = "green.theme";
    bell_beeps = "yes";
    beep_msg_level = "MSGS DCC DCCMSGS HILIGHT NOTICES";
  };
};
keyboard = (
  { key = "^[OP"; id = "key"; data = "F1"; },
  { key = "^[OQ"; id = "key"; data = "F2"; },
  { key = "^[OR"; id = "key"; data = "F3"; },
  { key = "^[OS"; id = "key"; data = "F4"; },
  { key = "^[OT"; id = "key"; data = "F5"; },
  { key = "^[OU"; id = "key"; data = "F6"; },
  { key = "^[OV"; id = "key"; data = "F7"; },
  { key = "^[OW"; id = "key"; data = "F8"; },
  { key = "^[OX"; id = "key"; data = "F9"; },
  { key = "^[OY"; id = "key"; data = "F10"; },
  { key = "^[OZ"; id = "key"; data = "F11"; },
  { key = "^[O["; id = "key"; data = "F12"; },
  { key = "^[[11~"; id = "key"; data = "F1"; },
  { key = "^[[12~"; id = "key"; data = "F2"; },
  { key = "^[[13~"; id = "key"; data = "F3"; },
  { key = "^[[14~"; id = "key"; data = "F4"; },
  { key = "^[[15~"; id = "key"; data = "F5"; },
  { key = "^[[16~"; id = "key"; data = "F6"; },
  { key = "^[[17~"; id = "key"; data = "F6"; },
  { key = "^[[18~"; id = "key"; data = "F7"; },
  { key = "^[[19~"; id = "key"; data = "F8"; },
  { key = "^[[20~"; id = "key"; data = "F9"; },
  { key = "^[[21~"; id = "key"; data = "F10"; },
  { key = "^[[23~"; id = "key"; data = "F11"; },
  { key = "^[[24~"; id = "key"; data = "F12"; },
  { key = "F1"; id = "command"; data = "window 1"; },
  { key = "F2"; id = "command"; data = "window 2"; },
  { key = "F3"; id = "command"; data = "window 3"; },
  { key = "F4"; id = "command"; data = "window 4"; },
  { key = "F5"; id = "command"; data = "window 5"; },
  { key = "F6"; id = "command"; data = "window 6"; },
  { key = "F7"; id = "command"; data = "window 7"; },
  { key = "F8"; id = "command"; data = "window 8"; },
  { key = "F9"; id = "command"; data = "window 9"; },
  { key = "F10"; id = "command"; data = "window 10"; },
  { key = "F11"; id = "command"; data = "window 11"; },
  { key = "F12"; id = "command"; data = "window 12"; }
);

hilights = (
  { text = "AnneH"; nick = "yes"; word = "yes"; },
  { text = "all o/ "; nick = "yes"; word = "yes"; }
);
logs = { };
